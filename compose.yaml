services:
  auctions-service:
    build:
      context: ./auctions-service
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - ./auctions-service:/app
      - /app/node_modules
    command: npm run start:dev
    environment:
      - NODE_ENV=development
    networks:
      - postgres
      - redis
    depends_on:
      - postgres
      - redis

  auctions-client:
    build:
      context: ./auctions-client
      dockerfile: Dockerfile.dev
    ports:
      - '5173:5173'
    volumes:
      - ./auctions-client:/app
      - /app/node_modules
    command: npm run dev
    environment:
      - NODE_ENV=development

  postgres:
    image: postgres:15
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transport_auctions
    networks:
      - postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7
    ports:
      - '6379:6379'
    volumes:
      - ./data/redis:/data
      - ./redis/create-queues.sh:/docker-entrypoint-initdb.d/create-queues.sh
    command: ["/bin/bash", "-c", "redis-server --appendonly yes & sleep 5 && /docker-entrypoint-initdb.d/create-queues.sh && wait"]
    networks:
      - redis

networks:
  postgres:
    driver: bridge
  redis:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
